global:
  replicaCount: 1
  environment: {}
   # list of key: value
   # GLOBAL1: value

deployment: false 
hostNetwork: false

image:
  repository: "myrepo.com/my-image"
  tag: "v1.2.3"
  pullPolicy: IfNotPresent

  #replicaCount: 1

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

nameOverride: ""
fullnameOverride: ""

#serviceAccount: microservice-sa
createServiceAccount: false
rbac: false

# Annotation for the Deployment
annotations: {}

# List of services
services:
  - name: web
    type: ClusterIP
    annotations: {}
    specs:
    - port: 8000
      targetPort: 8000
      name: http
  - name: console
    type: ClusterIP
    annotations: {}
    specs:
    - port: 9000
      targetPort: 9000
      name: http

environment:
  VAR1: value1

#Probes
liveness:
  enabled: false
  path: /alive
  port: 8001
  initialDelaySeconds: 3
  periodSeconds: 3
readiness:
  enabled: false
  path: /ready
  port: 8001
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 3


updateStrategy: {}
  ## for stateless apps, Default
  # type: RollingUpdate
  # rollingUpdate: {}

  ## for stateful apps: 
  # type: Recreate

volumes:
  enabled: true
  pvc:
    enabled: true
    existingClaim: null
    name: my-data
    mountPath: ""
    # if subPath is used mountPath must be empty 
    subPaths:
    - mountPath: /data
      subPath: data
    - mountPath: /var/lib/logs
      subPath: logs
    size: 1G
    class:
    accessModes:
      - ReadWriteOnce
  configMaps:
    - name: test
      mountPath: /test
      data:
        test.conf: |
          hello

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      servicePort: 8000
      serviceName: web
      path: /
  tls: []
  pathType: Prefix

serviceMonitors:
  - name: service-monitor-1
    serviceName: web
    endPoints:
      - port: http
        interval: 15s
        path: /metrics
  - name: service-monitor-2
    serviceName: console
    endPoints:
      - port: http
        interval: 15s
        path: /metrics

nodeSelector: {}

tolerations: []

affinity: {}

resources:
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 200Mi

